<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=OneNote.File>
<meta name=Generator content="Microsoft OneNote 15">
<link id=Main-File rel=Main-File href="C%20Code%20Knowledge%20Assumption.htm">
<link rel=File-List href="C%20Code%20Knowledge%20Assumption_files/filelist.xml">
</head>

<body lang=en-AU style='font-family:Calibri;font-size:11.0pt'>

<div style='direction:ltr;border-width:100%'>

<div style='direction:ltr;margin-top:0in;margin-left:0in;width:6.5958in'>

<div style='direction:ltr;margin-top:0in;margin-left:0in;width:4.0194in'>

<p style='margin:0in;font-family:"Calibri Light";font-size:20.0pt' lang=en-US>C
Code Knowledge Assumption</p>

</div>

<div style='direction:ltr;margin-top:.0388in;margin-left:0in;width:2.0895in'>

<p style='margin:0in;font-family:Calibri;font-size:10.0pt;color:#666666'
lang=en-US>Friday, July 27, 2018</p>

<p style='margin:0in;font-family:Calibri;font-size:10.0pt;color:#666666'
lang=en-US>7:57 PM</p>

</div>

<div style='direction:ltr;margin-top:.4305in;margin-left:0in;width:6.5958in'>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Variables</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Type name;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Type name = value;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Name = value2;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Testing</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Check if equal |
valA == valB</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>AND | condA
&amp;&amp; condB</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>NOT | !cond<br>
OR | condA || condB</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Less Than | valA
&lt; valB<br>
Less Than or Equal To | valA &lt;= valB</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Greater Than | valA
&gt; valB</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Greater Than or
Equal To | valA &gt;= valB</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Conditions</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>If (conditionA) {</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>// stuff if conditionA is true</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>} else if
(conditionB) {</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>// stuff if conditionB is true</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>} else {</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>// stuff if neither conditionA or conditionB
is true</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>}</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Loops</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>While Loop</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>while
(conditionToAllowRepeat) {</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>// doSomething();</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>// probably change the value of
conditionToAllowRepeat<br>
}</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>For Loop</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>for (declaration;
condition; increment) {</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>// doSomething()</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>} </p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Ie </p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>for (var i = 0; i
&lt; 10; i++) {</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>// doSomething</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>}</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>'break'-ing in a loop</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>for (var i = 0; i
&lt; 10;<span style='mso-spacerun:yes'>  </span>i++) {</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>if (i == 2) break;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>printf(&quot;%d\n&quot;, i);</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>}</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>--&gt; 0 1</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>'continue'-ing in a loop</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>for (var i = 0; i
&lt; 10;<span style='mso-spacerun:yes'>  </span>i++) {</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>if (i == 2) continue;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>printf(&quot;%d\n&quot;, i);</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>}</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>--&gt; 0 1 3 4 5 6 7
8 9</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>scanf(&quot;FORMAT&quot;, loc1 [, loc2, loc3, …])</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Returns the number
of items successfully scanned</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>printf(&quot;FORMAT&quot;, var1 [, var2, var3, …])</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Returns the number
of characters printed</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Functions</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>returnType
functionName(paramAType paramAName, paramBType paramBName, …) {</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>return …;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>}</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Function Prototypes</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Important to put in
a function prototype, as the compiler reads the file from top to bottom. The
prototype declares the existence of a function (though not its functionality)</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Arrays</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Arrays are a
collection of items of the same type</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>ItemType
arrayName[arraySize];</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>ItemType
arrayName[arraySize] = {...};</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Array indexing
starts from 0, so therefore the item index are from 0...arraySize-1</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>ArrayName[0] -&gt;
first element<br>
arrayName[1] -&gt; second element</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>ArrayName[arraySize]
-&gt; DOES NOT EXIST, ERROR</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>ArrayName[arraySize-1]
-&gt; last element</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Files<br>
</span>#include &lt;stdio.h&gt;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>FILE* file =
fopen(char* path, char* mode)<br>
fclose(file)</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Structs</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Structs allow us to
create custom data types, that encapsulate other data elements. Useful for when
we want to group related variables together</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Values of elements
in a struct are not initialised.</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Struct Coord
{<br>
<span style='mso-spacerun:yes'>  </span>int x;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='mso-spacerun:yes'>  </span>int y;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>}</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Pointers</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>int a = 5;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>a --&gt;
5<br>
&amp;a -&gt; 0x2435678 (some arbitrary MEMORY ADDRESS)</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>*(&amp;a) -&gt;
*(0x2435678) -&gt; 5</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Dynamic Memory Allocation</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>memoryLocation =
malloc(sizeof(TYPE) * n);</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>free(memoryLocation)</p>

</div>

</div>

</div>

<div>

<p style='margin:0in'>&nbsp;</p>

<p style='text-align:left;margin:0in;font-family:Arial;font-size:9pt;
color:#969696;direction:ltr'>Created with Microsoft OneNote 2016.</p>

</div>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-107434487-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date()); gtag('config', 'UA-107434487-2');</script></body>

</html>
