<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=OneNote.File>
<meta name=Generator content="Microsoft OneNote 15">
<link id=Main-File rel=Main-File href="Lec%201.htm">
<link rel=File-List href="Lec%201_files/filelist.xml">
</head>

<body lang=en-AU style='font-family:Calibri;font-size:11.0pt'>

<div style='direction:ltr;border-width:100%'>

<div style='direction:ltr;margin-top:0in;margin-left:0in;width:6.5in'>

<div style='direction:ltr;margin-top:0in;margin-left:0in;width:1.1277in'>

<p style='margin:0in;font-family:"Calibri Light";font-size:20.0pt' lang=en-US>Lec
1</p>

</div>

<div style='direction:ltr;margin-top:.0388in;margin-left:0in;width:2.0895in'>

<p style='margin:0in;font-family:Calibri;font-size:10.0pt;color:#666666'
lang=en-US>Friday, July 27, 2018</p>

<p style='margin:0in;font-family:Calibri;font-size:10.0pt;color:#666666'
lang=en-US>8:18 PM</p>

</div>

<div style='direction:ltr;margin-top:.4305in;margin-left:0in;width:6.5in'>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'><span
style='font-weight:bold'>Typedefs</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Typedefs allow us to
create an alias to a datatype.</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>Consider a long long
int...</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>long long int
variableName;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>This is abit
unsightly... what if we did</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>typedef long long
int BigInt;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>BigInt variableName;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt'>That's better.</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US><span
style='font-weight:bold'>Assignments in Expressions</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US>An
expression is something that can be evaluated.</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US>We can
actually assign variables inside expressions</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US>int a;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US>A = 2;
&lt;-- this is an assignment</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US>(a=2);
&lt;-- this is an expression</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US>&nbsp;</p>

<p style='margin-top:5pt;margin-bottom:5pt;font-family:Calibri;font-size:9.5pt'
lang=en-US>Assignment-as-expression often used to simplify loops, e.g.</p>

<p style='margin:0in;font-family:Consolas;font-size:9.5pt' lang=en-US>// read
stdin one char at-a-time<br>
while ((ch = getchar()) != EOF) {<br>
<span style='mso-spacerun:yes'>   </span>// do something with ch<br>
}<br>
</p>

<p style='margin-top:5pt;margin-bottom:5pt;font-family:Calibri;font-size:9.5pt'
lang=en-US>rather than</p>

<p style='margin:0in;font-family:Consolas;font-size:9.5pt' lang=en-US>ch =
getchar();<br>
while (ch != EOF) {<br>
<span style='mso-spacerun:yes'>   </span>// do something with ch<br>
<span style='mso-spacerun:yes'>   </span>ch = getchar();<br>
}</p>

<p style='margin:0in;font-family:Consolas;font-size:9.5pt' lang=en-US>&nbsp;</p>

<p style='margin:0in;font-family:Consolas;font-size:9.5pt' lang=en-US>&nbsp;</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US><span
style='font-weight:bold'>Stacks and Queues</span></p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US>Stacks –
last in, first out</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US>Queues –
first in, first out</p>

<p style='margin:0in;font-family:Calibri;font-size:11.0pt' lang=en-US>Priority
Queues – highest priority out<span style='mso-spacerun:yes'>  </span></p>

</div>

</div>

</div>

<div>

<p style='margin:0in'>&nbsp;</p>

<p style='text-align:left;margin:0in;font-family:Arial;font-size:9pt;
color:#969696;direction:ltr'>Created with Microsoft OneNote 2016.</p>

</div>

</body>

</html>
